<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2009 Information Control Corporation

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.simpliccity.sst</groupId>
		<artifactId>sst</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<artifactId>modules</artifactId>
	<packaging>pom</packaging>
	<name>SST Code Modules</name>
	<description>${displayTitle} Java modules</description>
  
	<properties>
		<!-- Placeholder properties.  These will be overridden either from specific profiles that are enabled or from the command line. -->
		<jacocoDirectory>${project.build.directory}/external</jacocoDirectory>
		<maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
	</properties>
  
	<modules>
		<module>sst-core</module>
		<module>sst-data-rest</module>
		<module>sst-jwt</module>
		<module>sst-security</module>		
		<module>sst-ws</module>
		<module>sst-web</module>
		<module>sst-webflow</module>
		<module>sstws-maven-plugin</module>
	</modules>

	<dependencies>
 
 		<!-- External dependencies -->
 		
	    <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<scope>provided</scope>
	    </dependency>
	    
	    <dependency>
	    	<groupId>org.springframework</groupId>
	    	<artifactId>spring-context</artifactId>
			<scope>provided</scope>
	    </dependency>

		<dependency>   
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<scope>provided</scope>
		</dependency>
	    
		<dependency>
			<groupId>org.simpliccity.styleguide</groupId>
			<artifactId>styleguide-core</artifactId>
		</dependency>
		
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>
			
	    <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
	    </dependency>
	    
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
	 
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>  
	  	</dependency>
			
	    <dependency>
	      <groupId>org.springframework</groupId>
	      <artifactId>spring-test</artifactId>
	    </dependency>
	    
	</dependencies>
  
	<build>
  
	    <plugins>
	    
	      <!-- Create source bundle of project for use with centralized Javadoc report -->
	      <plugin>
	      	<groupId>org.apache.maven.plugins</groupId>
	      	<artifactId>maven-source-plugin</artifactId>
	      	<executions>
	      		<execution>
	      			<id>bundle-sources</id>
	      			<phase>package</phase>
	      			<goals>
	      				<goal>jar-no-fork</goal>
	      			</goals>
	      		</execution>
	      	</executions>
	      </plugin>
	      
	    </plugins>
	    
	</build>
 
	<profiles>

		<profile>
			<!-- Configurations to produce module support artifact -->
			<id>module-support</id>
			<activation>
				<file>
					<exists>${basedir}/src/assembly/support.xml</exists>
				</file>
			</activation>
			
			<build>
			
				<plugins>
				
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
			  			<executions>
			  				<execution>
			  					<id>support-assembly</id>
			  					<phase>package</phase>
			  					<goals>
			  						<goal>single</goal>
			  					</goals>
			  					<configuration>
			  						<descriptors>
			  							<descriptor>src/assembly/support.xml</descriptor>
			  						</descriptors>
			  						<tarLongFileMode>gnu</tarLongFileMode>
			  					</configuration>
			  				</execution>
			  			</executions>
					</plugin>
					
				</plugins>
				
			</build>
			
		</profile>

		<profile>
			<!-- Configurations to generate module-specific documentation -->
			<id>module-doc</id>
			<activation>
				<file>
					<exists>${basedir}/src/assembly/docsSource.xml</exists>
				</file>
			</activation>
			
			<build>
			
				<plugins>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>doc-assembly</id>
								<phase>site</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${basedir}/src/docs</directory>
											<includes>
												<include>**/*</include>
											</includes>
											<filtering>true</filtering>
										</resource>
									</resources>
									<outputDirectory>${moduleDocDirectory}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
								
				</plugins>
				
			</build>
			
		</profile>
			  
		<profile>
			<!-- Profile to support automated integration testing -->
			<id>int-test</id>
			
			<build>
			
				<plugins>
				
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<!-- Use same output directory as Surefire plugin to combine unit and integration tests into single report -->
<!--							<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory> -->
							<argLine>${coverage.agent.argLine}</argLine>
						</configuration>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					
				</plugins>
				
			</build>
			
		</profile>
	
		<profile>
			<!-- Profile to generate code analysis metrics -->
			<id>analysis</id>
			
			<build>
			
				<plugins>
				
					<plugin>
		      			<groupId>org.jacoco</groupId>
		      			<artifactId>jacoco-maven-plugin</artifactId>
							<configuration>
								<includes>
									<include>${basePackagePath}/**</include>
								</includes>
								<destFile>${jacocoDirectory}/jacoco.exec</destFile>
								<append>true</append>
								<propertyName>coverage.agent.argLine</propertyName>
							</configuration>
							<executions>
								<execution>
									<id>jacoco-init</id>
<!--									<phase>process-test-classes</phase> -->
									<goals>
										<goal>prepare-agent</goal>
									</goals>
								</execution>
								<execution>
									<id>jacoco-it-init</id>
<!-- 									<phase>process-test-classes</phase> -->
									<goals>
										<goal>prepare-agent-integration</goal>
									</goals>
								</execution>
								<execution>
									<id>jacoco-report</id>
									<phase>verify</phase>
									<goals>
										<goal>report</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<configuration>
								<argLine>${coverage.agent.argLine}</argLine>
							</configuration>
						</plugin>
	      
				</plugins>
				
			</build>
			
		</profile>

		<profile>
			<!-- Configurations for generating Sonar metrics -->
			<id>sonar</id>
		
			<build>
			
				<plugins>
				
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
						</configuration>
					</plugin>
					
				</plugins>
				
			</build>
			
			<dependencies>
			
				<dependency>
					<groupId>org.codehaus.sonar-plugins.java</groupId>
					<artifactId>sonar-jacoco-listeners</artifactId>
				</dependency>
				
			</dependencies>
			
		</profile>
				
		<profile>
			<!-- Configurations for generating quality reports without Sonar -->
			<id>no-sonar</id>
			
			<reporting>
			
				<plugins>
				
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<version>2.19</version>
					</plugin>
	
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>2.17</version>
					</plugin>
	
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<version>3.5</version>
					</plugin>
				  
				</plugins>
				
			</reporting>
			
		</profile>

		<profile>
			<!-- Configurations for a full distribution build -->
			<id>dist</id>
			
			<build>
			
				<plugins>
							
					<!-- Allow documentation project to compile and deploy the site documentation -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-site-plugin</artifactId>
						<executions>
							<execution>
								<id>default-site</id>
								<goals>
									<goal>site</goal>
								</goals>
								<configuration>
									<generateReports>true</generateReports>
								</configuration>
							</execution>
						</executions>
					</plugin>		
					
				</plugins>
				
			</build>
		
			<reporting>
			
				<plugins>

					<!-- Generate standard reports -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-project-info-reports-plugin</artifactId>
		      	  		<version>2.8.1</version>
						<reportSets>
							<reportSet>
								<reports>
									<report>dependencies</report>
									<report>dependency-convergence</report>
									<report>dependency-management</report>
									<report>index</report>
									<report>license</report>
									<report>plugin-management</report>
									<report>plugins</report>
									<report>summary</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
					
				</plugins>
				
			</reporting>
			
		</profile>
							
	</profiles>
   
</project>